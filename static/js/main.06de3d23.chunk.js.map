{"version":3,"sources":["selectQuestionComponent/SelectQuestionComponent.js","answerComponent/AnswerComponent.js","selectQuestionComponent/SelectQuestionContainer.js","AudioRecord.js","VideoRecord.js","App.js","reportWebVitals.js","index.js"],"names":["SelectQuestionComponent","props","ref","useRef","useEffect","autosize","current","Col","type","class","onClick","setSelected","index","className","selected","data","question","React","memo","AnswerComponent","onChangeValue","value","onChangeAnswer","Row","style","padding","width","answer","map","lg","md","sm","xl","xs","xxl","maxHeight","minHeight","resize","boxSizing","fontSize","textCombineUpright","placeholder","rows","option","onFocus","setSelectedOption","onFocusOption","onChange","alignItems","justifyContent","display","SelectQuestionContainer","useState","img","setImg","classname","onChangeQuestion","event","target","files","reader","FileReader","onload","e","result","readAsDataURL","id","src","alt","Button","fontWeight","onAddAnswer","onDeleteAnswer","AudioRecord","useReactMediaRecorder","audio","status","startRecording","stopRecording","mediaBlobUrl","marginLeft","controls","VideoRecord","video","videoRef","console","log","navigator","mediaDevices","getUserMedia","then","stream","srcObject","height","autoPlay","App","setData","selectedOption","statusVideo","startRecordingVideo","stopRecordingVideo","mediaBlobUrlVideo","tmp","JSON","parse","localStorage","getItem","setSelectQuestion","useCallback","onAddClicked","push","length","onDeleteClicked","splice","nativeEvent","setItem","stringify","setOption","Container","fluid","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06de3d23.chunk.js","sourcesContent":["import autosize from \"autosize\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Col } from \"react-bootstrap\";\n\nconst SelectQuestionComponent = (props) => {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    autosize(ref.current);\n  });\n\n  const toggleTouched = () => {\n    props.setSelected(props.index);\n  };\n\n  return (\n    <Col>\n      <button\n        type=\"button\"\n        class=\"btn btn-primary-outline\"\n        onClick={toggleTouched}\n      >\n        <h6\n          key={props.data.question}\n          className={\n            props.selected === props.index ? \"txt-item-touched\" : \"txt-item\"\n          }\n        >\n          {props.index + 1}. {props.data.question}\n        </h6>\n      </button>\n    </Col>\n  );\n};\n\nexport default React.memo(SelectQuestionComponent);\n","import { Col, Container, Row } from \"react-bootstrap\";\nimport autosize from \"autosize\";\nimport React, { useEffect, useRef } from \"react\";\n\nfunction AnswerComponent(props) {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    autosize(ref.current);\n  });\n\n  const onFocusOption = (index) => {\n    props.setSelectedOption(index);\n  };\n\n  const onChangeValue = (value) => {\n    props.onChangeAnswer(value);\n  };\n\n  return (\n    <Row\n      style={{\n        padding: 0,\n        width: \"100%\",\n      }}\n    >\n      {props.data[props.selected]?.answer.map((answer, index) => (\n        <>\n          <Col\n            style={{ padding: 0 }}\n            lg={2}\n            md={3}\n            sm={3}\n            xl={2}\n            xs={12}\n            xxl={2}\n          >\n            <h6 className={\"txt-item-bold\"}>Option {index + 1}</h6>\n          </Col>\n          <Col className=\"p-0\" lg={10} md={9} sm={9} xl={10} xs={12} xxl={10}>\n            <textarea\n              ref={ref}\n              style={{\n                maxHeight: \"75px\",\n                minHeight: \"38px\",\n                width: \"100%\",\n                resize: \"none\",\n                boxSizing: \"border-box\",\n                fontSize: \"1rem\",\n                textCombineUpright: \"center\",\n              }}\n              placeholder=\"Type option\"\n              rows={1}\n              value={answer.option}\n              onFocus={() => onFocusOption(index)}\n              onChange={onChangeValue}\n            />\n            <div\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                display: \"flex\",\n              }}\n            ></div>\n          </Col>\n        </>\n      ))}\n    </Row>\n  );\n}\n\nexport default React.memo(AnswerComponent);\n","import { Col, Row, Button } from \"react-bootstrap\";\nimport autosize from \"autosize\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport AnswerComponent from \"../answerComponent/AnswerComponent\";\n\nfunction SelectQuestionContainer(props) {\n  const ref = useRef(null);\n  const [img, setImg] = useState(\"\");\n\n  useEffect(() => {\n    autosize(ref.current);\n  });\n\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        setImg(e.target.result);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n\n  return (\n    <div>\n      <ul className={\"question-item\"}>\n        <h6 className={\"txt-title\"}>Design question {props.selected + 1}</h6>\n        <Row\n          style={{\n            padding: 0,\n          }}\n          classname={\"form-item\"}\n        >\n          <Col\n            style={{ padding: 0 }}\n            lg={2}\n            md={3}\n            sm={3}\n            xl={2}\n            xs={12}\n            xxl={2}\n          >\n            <h6 className={\"txt-item-bold\"}>Question</h6>\n          </Col>\n          <Col className=\"p-0\" lg={10} md={9} sm={9} xl={10} xs={12} xxl={10}>\n            <textarea\n              ref={ref}\n              style={{\n                maxHeight: \"75px\",\n                minHeight: \"38px\",\n                width: \"100%\",\n                resize: \"none\",\n                boxSizing: \"border-box\",\n                fontSize: \"1rem\",\n                textCombineUpright: \"center\",\n              }}\n              placeholder=\"Type question\"\n              rows={1}\n              onChange={props.onChangeQuestion}\n              value={props.data[props.selected]?.question}\n            />\n            <div\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <input\n                type=\"file\"\n                onChange={onImageChange}\n                className=\"filetype\"\n                id=\"group_image\"\n              />\n              {!!img ? (\n                <img className={'img-add'} src={img}  alt=\"description\" />\n              ) : null}\n              {/* <Button\n                style={{ fontSize: 10, fontWeight: \"bold\" }}\n                type=\"submit\"\n              >\n                ADD IMAGE\n              </Button> */}\n            </div>\n          </Col>\n        </Row>\n      </ul>\n      <ul className={\"list-item-answer\"}>\n        <AnswerComponent\n          data={props.data}\n          selected={props.selected}\n          setSelectedOption={props.setSelectedOption}\n          onChangeAnswer={props.onChangeAnswer}\n        />\n      </ul>\n      <Row className={\"two-button-container\"}>\n        <Col className={\"button-left\"}>\n          <Button\n            style={{ fontSize: 10, fontWeight: \"bold\" }}\n            type=\"submit\"\n            onClick={props.onAddAnswer}\n          >\n            ADD\n          </Button>\n        </Col>\n        <Col className={\"button-right\"}>\n          <Button\n            style={{ fontSize: 10, fontWeight: \"bold\" }}\n            type=\"submit\"\n            onClick={props.onDeleteAnswer}\n          >\n            DELETE\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default React.memo(SelectQuestionContainer);\n","import React from \"react\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\n\nconst AudioRecord = (props) => {\n  const { status, startRecording, stopRecording, mediaBlobUrl } =\n    useReactMediaRecorder({ audio: true });\n\n  return (\n    <div>\n      Audio\n      <p style={{ marginLeft: 20 }}>{status}</p>\n      <button onClick={startRecording}>Start Recording</button>\n      <button onClick={stopRecording}>Stop Recording</button>\n      <video src={mediaBlobUrl} controls />\n    </div>\n  );\n};\n\nexport default React.memo(AudioRecord);\n","import React, { useEffect, useRef } from \"react\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\n\nconst VideoRecord = (props) => {\n  const { status, startRecording, stopRecording, mediaBlobUrl } =\n    useReactMediaRecorder({ video: true });\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    console.log(`%c status`, \"color: blue; font-weight: 600\", status);\n    if (status === \"recording\") {\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(function (stream) {\n          videoRef.current && (videoRef.current.srcObject = stream);\n        });\n    } else if (status === \"stopped\") {\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(function (stream) {\n          videoRef.current && (videoRef.current.srcObject = null);\n        });\n    }\n  }, [status]);\n\n  return (\n    <div>\n      Video\n      <p style={{ marginLeft: 20 }}>{status}</p>\n      <button onClick={startRecording}>Start Recording</button>\n      <button onClick={stopRecording}>Stop Recording</button>\n      <video ref={videoRef} width={200} height={200} autoPlay />\n      <video src={mediaBlobUrl} width={200} height={200} controls />\n    </div>\n  );\n};\n\nexport default React.memo(VideoRecord);\n","import \"./App.css\";\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\nimport autosize from \"autosize\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport SelectQuestionComponent from \"./selectQuestionComponent/SelectQuestionComponent\";\nimport SelectQuestionContainer from \"./selectQuestionComponent/SelectQuestionContainer\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport AudioRecord from \"./AudioRecord\";\nimport VideoRecord from \"./VideoRecord\";\n\nfunction App() {\n  const ref = useRef(null);\n  const [data, setData] = useState([]);\n\n  const [selected, setSelected] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(0);\n\n  const { status, startRecording, stopRecording, mediaBlobUrl } =\n    useReactMediaRecorder({ audio: true });\n\n  const {\n    statusVideo,\n    startRecordingVideo,\n    stopRecordingVideo,\n    mediaBlobUrlVideo,\n  } = useReactMediaRecorder({ video: true });\n\n  useEffect(() => {\n    const tmp = JSON.parse(localStorage.getItem(\"data\"));\n    if (tmp) {\n      setData(tmp);\n    } else {\n      setData([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    autosize(ref.current);\n  });\n\n  const setSelectQuestion = useCallback((index) => {\n    setSelected(index);\n  }, []);\n\n  const onAddClicked = useCallback(() => {\n    const add = { question: \"\", answer: [{ option: \"\" }] };\n    const tmp = [...data];\n    tmp.push(add);\n    setData(tmp);\n    setSelected(tmp.length - 1);\n  }, [data]);\n\n  const onDeleteClicked = useCallback(() => {\n    const tmp = [...data];\n    tmp.splice(selected, 1);\n    setData(tmp);\n  }, [selected, data]);\n\n  const onChangeQuestion = useCallback(\n    (event) => {\n      const tmp = [...data];\n      tmp[selected].question = event.nativeEvent.target.value;\n      setData(tmp);\n      localStorage.setItem(\"data\", JSON.stringify(tmp));\n    },\n    [data, selected]\n  );\n\n  const onChangeAnswer = useCallback(\n    (event) => {\n      const tmp = [...data];\n      tmp[selected].answer[selectedOption].option =\n        event.nativeEvent.target.value;\n      setData(tmp);\n      console.log(`%c tmp`, \"color: blue; font-weight: 600\", tmp);\n      localStorage.setItem(\"data\", JSON.stringify(tmp));\n    },\n    [data, selected, selectedOption]\n  );\n\n  const onAddAnswer = useCallback(() => {\n    const add = { option: \"\" };\n    const tmp = [...data];\n    tmp[selected].answer.push(add);\n    setData(tmp);\n  }, [data, selected]);\n\n  const onDeleteAnswer = useCallback(() => {\n    const tmp = [...data];\n    tmp[selected].answer.splice(selectedOption, 1);\n    setData(tmp);\n  }, [data, selected, selectedOption]);\n\n  const setOption = useCallback((index) => {\n    setSelectedOption(index);\n  }, []);\n\n  return (\n    <Container fluid className=\"p-0\">\n      <Col>\n        <Row>\n          <Col\n            className=\"left-container\"\n            lg={4} //992\n            md={4} // >= 768\n            xl={4} //1200\n            sm={5} // >=576\n            xs={12} //<576\n            xxl={4} // >14000\n          >\n            <div className={\"left-item\"}>\n              <ul className={\"list-item\"}>\n                <h6 className={\"txt-title\"}>Select your questions</h6>\n                {data.map((item, index) => (\n                  <SelectQuestionComponent\n                    index={index}\n                    key={item.question}\n                    data={item}\n                    selected={selected}\n                    setSelected={setSelectQuestion}\n                  />\n                ))}\n              </ul>\n              <Row className={\"two-button-container\"}>\n                <Col className={\"button-left\"}>\n                  <Button\n                    style={{ fontSize: 10, fontWeight: \"bold\", width: 70 }}\n                    type=\"submit\"\n                    onClick={onAddClicked}\n                  >\n                    ADD\n                  </Button>\n                </Col>\n                <Col className={\"button-right\"}>\n                  <Button\n                    style={{ fontSize: 10, fontWeight: \"bold\", width: 70 }}\n                    type=\"submit\"\n                    onClick={onDeleteClicked}\n                  >\n                    DELETE\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col\n            lg={8}\n            md={8}\n            sm={7}\n            xl={8}\n            xs={12}\n            xxl={8}\n            className=\"right-container\"\n          >\n            <div className={\"right-item\"}>\n              <SelectQuestionContainer\n                data={data}\n                selected={selected}\n                onChangeQuestion={onChangeQuestion}\n                onAddAnswer={onAddAnswer}\n                onDeleteAnswer={onDeleteAnswer}\n                setSelectedOption={setOption}\n                onChangeAnswer={onChangeAnswer}\n              />\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <AudioRecord />\n          </Col>\n          <Col>\n            <VideoRecord />\n          </Col>\n        </Row>\n        <Row></Row>\n      </Col>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}