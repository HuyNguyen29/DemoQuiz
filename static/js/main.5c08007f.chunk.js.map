{"version":3,"sources":["selectQuestionComponent/SelectQuestionComponent.js","answerComponent/AnswerComponent.js","selectQuestionComponent/SelectQuestionContainer.js","App.js","reportWebVitals.js","index.js"],"names":["SelectQuestionComponent","forwardRef","props","ref","messagesEndRef","useRef","scrollToBottom","current","scrollIntoView","behavior","useImperativeHandle","className","data","map","item","index","Col","type","class","onClick","setSelected","toggleTouched","selected","question","React","memo","AnswerComponent","optionEndRef","refInput","useEffect","autosize","onChangeValue","value","onChangeAnswer","answer","Row","style","padding","width","lg","md","sm","xl","xs","xxl","maxHeight","minHeight","resize","boxSizing","fontSize","textCombineUpright","placeholder","rows","option","onFocus","setSelectedOption","onFocusOption","onChange","alignItems","justifyContent","display","SelectQuestionContainer","selectImageRef","refOption","useState","onImageChange","event","target","files","reader","FileReader","onload","e","onAddImg","result","readAsDataURL","onClickSelectImage","click","onDeleteSelectImage","close","onDeleteImg","classname","onChangeQuestion","img","src","alt","accept","id","Button","variant","trigger","modal","fontWeight","marginLeft","onAddAnswer","setTimeout","onDeleteAnswer","App","refListQuestion","setData","selectedOption","useReactMediaRecorder","audio","status","startRecording","stopRecording","mediaBlobUrl","video","statusVideo","startRecordingVideo","stopRecordingVideo","mediaBlobUrlVideo","tmp","JSON","parse","localStorage","getItem","length","setSelectQuestion","useCallback","onAddClicked","push","setItem","stringify","onDeleteClicked","splice","nativeEvent","setOption","Container","fluid","backgroundColor","paddingLeft","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c08007f.chunk.js","sourcesContent":["import React, { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { Col } from \"react-bootstrap\";\n\nconst SelectQuestionComponent = forwardRef((props, ref) => {\n  const messagesEndRef = useRef(null);\n\n  const toggleTouched = (index) => {\n    props.setSelected(index);\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useImperativeHandle(ref, () => ({\n    scrollToBottom: scrollToBottom,\n  }));\n\n  return (\n    <div className={\"list-item\"}>\n      {props.data?.map((item, index) => (\n        <Col key={item.question}>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary-outline\"\n            onClick={() => toggleTouched(index)}\n          >\n            <h6\n              className={\n                props.selected === index ? \"txt-item-touched\" : \"txt-item\"\n              }\n            >\n              {index + 1}. {item.question}\n            </h6>\n          </button>\n        </Col>\n      ))}\n      <div ref={messagesEndRef} />\n    </div>\n  );\n});\n\nexport default React.memo(SelectQuestionComponent);\n","import { Col, Container, Row } from \"react-bootstrap\";\nimport autosize from \"autosize\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from \"react\";\n\nconst AnswerComponent = forwardRef((props, ref) => {\n  const optionEndRef = useRef(null);\n  const refInput = useRef(null);\n\n  useEffect(() => {\n    autosize(refInput.current);\n  });\n\n  const onFocusOption = (index) => {\n    props.setSelectedOption(index);\n  };\n\n  const onChangeValue = (value) => {\n    props.onChangeAnswer(value);\n  };\n\n  const scrollToBottom = () => {\n    optionEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useImperativeHandle(ref, () => ({\n    scrollToBottom: scrollToBottom,\n  }));\n\n  return (\n    <ul className={\"list-item-answer\"}>\n      {props?.data?.[props.selected]?.answer.map((answer, index) => (\n        <Row\n          style={{\n            padding: 0,\n            width: \"100%\",\n          }}\n        >\n          <Col\n            style={{ padding: 0 }}\n            lg={2}\n            md={3}\n            sm={3}\n            xl={2}\n            xs={12}\n            xxl={2}\n          >\n            <h6 className={\"txt-item-bold\"}>Option {index + 1}</h6>\n          </Col>\n          <Col className=\"p-0\" lg={10} md={9} sm={9} xl={10} xs={12} xxl={10}>\n            <textarea\n              ref={refInput}\n              style={{\n                maxHeight: \"75px\",\n                minHeight: \"38px\",\n                width: \"100%\",\n                resize: \"none\",\n                boxSizing: \"border-box\",\n                fontSize: \"1rem\",\n                textCombineUpright: \"center\",\n              }}\n              placeholder=\"Type option\"\n              rows={1}\n              value={answer.option}\n              onFocus={() => onFocusOption(index)}\n              onChange={onChangeValue}\n            />\n            <div\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                display: \"flex\",\n              }}\n            ></div>\n          </Col>\n        </Row>\n      ))}\n      <div ref={optionEndRef} />\n    </ul>\n  );\n});\n\nexport default React.memo(AnswerComponent);\n","import { Col, Row, Button } from \"react-bootstrap\";\nimport autosize from \"autosize\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport AnswerComponent from \"../answerComponent/AnswerComponent\";\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\n\nfunction SelectQuestionContainer(props) {\n  const ref = useRef(null);\n  const selectImageRef = useRef(null);\n  const refOption = useRef(null);\n  const [selected, setSelected] = useState();\n\n  useEffect(() => {\n    autosize(ref.current);\n  });\n\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        props.onAddImg(e.target.result);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n\n  const onDeleteAnswer = (close) => {\n    props.onDeleteAnswer();\n    close();\n  };\n\n  const setSelectedOption = (index) => {\n    props.setSelectedOption(index);\n    setSelected(index);\n  };\n\n  const onClickSelectImage = () => {\n    selectImageRef.current?.click();\n  };\n\n  const onDeleteSelectImage = (close) => {\n    props.onDeleteImg();\n    close();\n  };\n\n  const onAddOption = () => {\n    props.onAddAnswer();\n    setTimeout(() => {\n      refOption.current.scrollToBottom();\n    }, 200);\n  };\n\n  return (\n    <div>\n      <ul className={\"question-item\"}>\n        <h6 className={\"txt-title\"}>Design question {props.selected + 1}</h6>\n        <Row\n          style={{\n            padding: 0,\n          }}\n          classname={\"form-item\"}\n        >\n          <Col\n            style={{ padding: 0 }}\n            lg={2}\n            md={3}\n            sm={3}\n            xl={2}\n            xs={12}\n            xxl={2}\n          >\n            <h6 className={\"txt-item-bold\"}>Question</h6>\n          </Col>\n          <Col className=\"p-0\" lg={10} md={9} sm={9} xl={10} xs={12} xxl={10}>\n            <textarea\n              ref={ref}\n              style={{\n                maxHeight: \"75px\",\n                minHeight: \"38px\",\n                width: \"95%\",\n                resize: \"none\",\n                boxSizing: \"border-box\",\n                fontSize: \"1rem\",\n                textCombineUpright: \"center\",\n              }}\n              placeholder=\"Type question\"\n              rows={1}\n              onChange={props.onChangeQuestion}\n              value={props.data?.[props.selected]?.question}\n            />\n            {!!props.data?.[props.selected]?.img ? (\n              <div class=\"d-flex align-items-center flex-column\">\n                <img\n                  style={{ maxHeight: \"20vh\" }}\n                  src={props.data?.[props.selected]?.img}\n                  alt=\"description\"\n                />\n                <div class=\"d-flex justify-content-center\">\n                  <div>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={onImageChange}\n                      className=\"d-none\"\n                      id=\"group_image\"\n                      ref={selectImageRef}\n                    />\n                    <Button\n                      className=\"btn btn-primary bg-gradient m-2\"\n                      onClick={onClickSelectImage}\n                      variant=\"secondary\"\n                    >\n                      Edit\n                    </Button>\n                  </div>\n                  <Popup\n                    trigger={\n                      <Button\n                        className=\"btn btn-primary bg-gradient m-2\"\n                        onClick={onDeleteSelectImage}\n                        variant=\"danger\"\n                      >\n                        Delete\n                      </Button>\n                    }\n                    modal\n                  >\n                    {(close) => (\n                      <div>\n                        <h6 className={\"txt-title\"}>\n                          Are you sure to delete this image?\n                        </h6>\n                        <Button\n                          style={{\n                            fontSize: 10,\n                            fontWeight: \"bold\",\n                            width: 70,\n                          }}\n                          type=\"submit\"\n                          onClick={() => onDeleteSelectImage(close)}\n                        >\n                          Yes\n                        </Button>\n                        <Button\n                          style={{\n                            fontSize: 10,\n                            fontWeight: \"bold\",\n                            width: 70,\n                            marginLeft: 10,\n                          }}\n                          variant=\"secondary\"\n                          onClick={() => close()}\n                        >\n                          No\n                        </Button>\n                      </div>\n                    )}\n                  </Popup>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={onImageChange}\n                  className=\"d-none\"\n                  id=\"group_image\"\n                  ref={selectImageRef}\n                />\n                <Button\n                  className=\"btn btn-primary bg-gradient m-2\"\n                  onClick={onClickSelectImage}\n                >\n                  Add Image\n                </Button>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </ul>\n\n      <AnswerComponent\n        data={props.data}\n        selected={props.selected}\n        setSelectedOption={setSelectedOption}\n        onChangeAnswer={props.onChangeAnswer}\n        ref={refOption}\n      />\n      <Row className={\"two-button-container\"}>\n        <Col className={\"button-left\"}>\n          <Button\n            style={{ fontSize: 10, fontWeight: \"bold\" }}\n            type=\"submit\"\n            onClick={onAddOption}\n          >\n            ADD\n          </Button>\n        </Col>\n        <Col className={\"button-right\"}>\n          <Popup\n            trigger={\n              <Button\n                style={{ fontSize: 10, fontWeight: \"bold\" }}\n                type=\"submit\"\n                variant=\"danger\"\n              >\n                DELETE\n              </Button>\n            }\n            modal\n          >\n            {(close) => (\n              <div>\n                <h6 className={\"txt-title\"}>\n                  Are you sure to delete option number {selected + 1}?\n                </h6>\n                <Button\n                  style={{\n                    fontSize: 10,\n                    fontWeight: \"bold\",\n                    width: 70,\n                  }}\n                  type=\"submit\"\n                  onClick={() => onDeleteAnswer(close)}\n                >\n                  Yes\n                </Button>\n                <Button\n                  style={{\n                    fontSize: 10,\n                    fontWeight: \"bold\",\n                    width: 70,\n                    marginLeft: 10,\n                  }}\n                  variant=\"secondary\"\n                  onClick={() => close()}\n                >\n                  No\n                </Button>\n              </div>\n            )}\n          </Popup>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default React.memo(SelectQuestionContainer);\n","import \"./App.css\";\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\nimport autosize from \"autosize\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport SelectQuestionComponent from \"./selectQuestionComponent/SelectQuestionComponent\";\nimport SelectQuestionContainer from \"./selectQuestionComponent/SelectQuestionContainer\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport AudioRecord from \"./AudioRecord\";\nimport VideoRecord from \"./VideoRecord\";\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\n\nconst tmpNull = { question: \"\", answer: [{ option: \"\" }], img: \"\" };\n\nfunction App() {\n  const ref = useRef(null);\n  const refListQuestion = useRef(null);\n  const [data, setData] = useState([\n    { question: \"\", answer: [{ option: \"\" }], img: \"\" },\n  ]);\n  const [show, setShow] = useState(true);\n\n  const [selected, setSelected] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(0);\n\n  const { status, startRecording, stopRecording, mediaBlobUrl } =\n    useReactMediaRecorder({ audio: true });\n\n  const {\n    statusVideo,\n    startRecordingVideo,\n    stopRecordingVideo,\n    mediaBlobUrlVideo,\n  } = useReactMediaRecorder({ video: true });\n\n  useEffect(() => {\n    const tmp = JSON.parse(localStorage.getItem(\"data\"));\n    if (tmp && tmp?.length !== 0) {\n      setData(tmp);\n    } else {\n      setData([{ question: \"\", answer: [{ option: \"\" }], img: \"\" }]);\n    }\n  }, []);\n\n  useEffect(() => {\n    autosize(ref.current);\n  });\n\n  const setSelectQuestion = useCallback((index) => {\n    setSelected(index);\n  }, []);\n\n  const onAddClicked = useCallback(() => {\n    const add = { question: \"\", answer: [{ option: \"\" }], img: \"\" };\n    const tmp = [...data];\n    tmp.push(add);\n    setData(tmp);\n    localStorage.setItem(\"data\", JSON.stringify(tmp));\n    setSelected(tmp.length - 1);\n    setTimeout(() => {\n      refListQuestion.current.scrollToBottom();\n    }, 200);\n  }, [data]);\n\n  const onDeleteClicked = useCallback(\n    (close) => {\n      let tmp = [...data];\n      tmp.splice(selected, 1);\n      if (tmp?.length === 0) {\n        tmp = [{ question: \"\", answer: [{ option: \"\" }], img: \"\" }];\n        setData(tmp);\n        localStorage.setItem(\"data\", JSON.stringify(tmp));\n      } else {\n        setData(tmp);\n        localStorage.setItem(\"data\", JSON.stringify(tmp));\n      }\n      close();\n    },\n    [selected, data]\n  );\n\n  const onChangeQuestion = useCallback(\n    (event) => {\n      const tmp = [...data];\n      tmp[selected].question = event.nativeEvent.target.value;\n      setData(tmp);\n      localStorage.setItem(\"data\", JSON.stringify(tmp));\n    },\n    [data, selected]\n  );\n\n  const onChangeAnswer = useCallback(\n    (event) => {\n      const tmp = [...data];\n      tmp[selected].answer[selectedOption].option =\n        event.nativeEvent.target.value;\n      setData(tmp);\n      localStorage.setItem(\"data\", JSON.stringify(tmp));\n    },\n    [data, selected, selectedOption]\n  );\n\n  const onAddAnswer = useCallback(() => {\n    const tmp = [...data];\n    if (tmp[selected].answer.length < 6) {\n      const add = { option: \"\" };\n      tmp[selected].answer.push(add);\n      setData(tmp);\n      localStorage.setItem(\"data\", JSON.stringify(tmp));\n    }\n  }, [data, selected]);\n\n  const onDeleteAnswer = useCallback(() => {\n    const tmp = [...data];\n    tmp[selected].answer.splice(selectedOption, 1);\n    setData(tmp);\n    localStorage.setItem(\"data\", JSON.stringify(tmp));\n  }, [data, selected, selectedOption]);\n\n  const setOption = useCallback((index) => {\n    setSelectedOption(index);\n  }, []);\n\n  const onDeleteImg = useCallback(() => {\n    const tmp = [...data];\n    tmp[selected].img = null;\n    setData(tmp);\n    localStorage.setItem(\"data\", JSON.stringify(tmp));\n  }, [data, selected, selectedOption]);\n\n  const onAddImg = useCallback(\n    (img) => {\n      const tmp = [...data];\n      tmp[selected].img = img;\n      setData(tmp);\n      localStorage.setItem(\"data\", JSON.stringify(tmp));\n    },\n    [data, selected, selectedOption]\n  );\n\n  const handleOnBackToQuetionList = () => {\n    setSelected(0);\n  };\n\n  return (\n    <Container fluid className=\"p-0\">\n      <Col>\n        <Row>\n          <div\n            className={`left-pane col-sm-4 ${\n              selected ? \"d-none d-md-block\" : \"\"\n            }`}\n            style={{ backgroundColor: \"rgb(0, 187, 255)\" }}\n          >\n            <div className={\"left-item\"}>\n              <h6 className={\"txt-title\"} style={{ paddingLeft: 20 }}>\n                Select your questions\n              </h6>\n              <SelectQuestionComponent\n                ref={refListQuestion}\n                data={data}\n                selected={selected}\n                setSelected={setSelectQuestion}\n              />\n              <Row className={\"two-button-container\"}>\n                <Col className={\"button-left\"}>\n                  <Button\n                    style={{ fontSize: 10, fontWeight: \"bold\", width: 70 }}\n                    type=\"submit\"\n                    onClick={onAddClicked}\n                  >\n                    ADD\n                  </Button>\n                </Col>\n                <Col className={\"button-right\"}>\n                  <Popup\n                    trigger={\n                      <Button\n                        style={{ fontSize: 10, fontWeight: \"bold\", width: 70 }}\n                        type=\"submit\"\n                        onClick={onAddClicked}\n                        variant=\"danger\"\n                      >\n                        DELETE\n                      </Button>\n                    }\n                    modal\n                  >\n                    {(close) => (\n                      <div>\n                        <h6 className={\"txt-title\"}>\n                          Are you sure to delete question number {selected}?\n                        </h6>\n                        <Button\n                          style={{\n                            fontSize: 10,\n                            fontWeight: \"bold\",\n                            width: 70,\n                          }}\n                          type=\"submit\"\n                          onClick={() => onDeleteClicked(close)}\n                        >\n                          Yes\n                        </Button>\n                        <Button\n                          style={{\n                            fontSize: 10,\n                            fontWeight: \"bold\",\n                            width: 70,\n                            marginLeft: 10,\n                          }}\n                          variant=\"secondary\"\n                          onClick={() => close()}\n                        >\n                          No\n                        </Button>\n                      </div>\n                    )}\n                  </Popup>\n                </Col>\n              </Row>\n            </div>\n          </div>\n          <div\n            className={`right-pane col-sm-8 ${\n              selected ? \"\" : \"d-none d-md-block\"\n            }`}\n            style={{ backgroundColor: \"rgb(182, 221, 242)\", height: \"100vh\" }}\n          >\n            <button\n              className=\"m-2 bg-gradient rounded btn btn-default d-sm-block d-md-none\"\n              onClick={handleOnBackToQuetionList}\n            >\n              {\"Back\"}\n            </button>\n            <div className={\"right-item\"}>\n              <SelectQuestionContainer\n                data={data}\n                selected={selected}\n                onChangeQuestion={onChangeQuestion}\n                onAddAnswer={onAddAnswer}\n                onDeleteAnswer={onDeleteAnswer}\n                setSelectedOption={setOption}\n                onChangeAnswer={onChangeAnswer}\n                onAddImg={onAddImg}\n                onDeleteImg={onDeleteImg}\n              />\n            </div>\n          </div>\n        </Row>\n        {/* <Row>\n          <Col>\n            <AudioRecord />\n          </Col>\n          <Col>\n            <VideoRecord />\n          </Col>\n        </Row>\n        <Row></Row> */}\n      </Col>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}